/ note: haml requires = touch tag aka %h1=
#pin_show.row
  .col-md-8.col-md-offset-2
    .panel.panel-default
      .panel-heading.pin_image
        = image_tag @pin.image.url
      .panel-body
        %h1= @pin.title
        %p.description= @pin.description
      .panel-footer
        .row
          .col-md-6
            %p.user
              Submitted by:
              - if user_signed_in?
                = @pin.user.email  # Submitted by lox@gmail.com        # for /pins/1
              - else 
                = link_to "Sign In", new_user_session_path, class: "btn btn-default btn-xs"

          .col-md-6
            .btn-group.pull-right 
              = link_to like_pin_path(@pin), method: :put, class: "btn btn-default" do # acts_as_votable, using heart glyph
                %span.glyphicon.glyphicon-heart 
                = @pin.get_upvotes.size
              - if user_signed_in?
                = link_to "Edit", edit_pin_path, class: "btn btn-default"
                = link_to "Delete", pin_path, method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-default"
                = render 'back'
                / = link_to "Back", root_path

  / Add comments 
  .col-md-8.col-md-offset-2
    .panel.panel-default
      / %p#notice= notice
      .panel-body
        %h2 Add a comment:
        / = form_for([@pin, @pin.comments.build]) do |f|
        / = simple_form_for([@pin, @pin.comments.build]) do |f|
        = simple_form_for([@pin, @pin.comments.build]) do |f|
          .panel-footer
            .row
              .col-md-6
                .field
                  / = f.text_field :commenter, input_html: { class: 'field' }
                  / = params[:id].to_s
                  / = current_user.id.to_s
                  = f.label :commenter, input_html: { class: 'field' }
                  %br
                  - if user_signed_in?
                    = current_user.email
                  - else 
                    = link_to "Sign In", new_user_session_path, class: "btn btn-default btn-xs"
                .field
                  = f.label :body, input_html: { class: 'field' }
                  %br
                  / = f.text_area :body, input_html: { class: 'field' }
                  = f.text_field :body, input_html: { class: 'field' }
                .field
                  = f.submit

  / View Comments
  - unless @pin.comments == 0
    .col-md-8.col-md-offset-2
      .panel.panel-default                  
        .panel-body
          - @pin.comments.each do |comment|
            / Commenter: #{comment.commenter} # not correct, needs to show comment creator
            %b Commenter: #{comment.pin.user.email}
            / %b Commenter: #{comment.user.email}
            .panel-footer
              Comment: #{comment.body}
            .field
              / = link_to 'Destroy Comment', [comment.pin], comment], :confirm => 'Delete Comment?', :method => :delete
                #{link_to 'Destroy Comment', [comment.pin, comment], :confirm => 'Are you sure?', :method => :delete, class: 'btn btn-xs btn-default'}
            %br

