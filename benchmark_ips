# itterations per second, how slow?
# See Below:

#!/usr/bin/env ruby
require 'benchmark/ips'

Benchmark.ips do |x|
  # Configure the number of seconds used during
  # the warmup phase (default 2) and calculation phase (default 5)
  x.config(:time => 5, :warmup => 2)

  # These parameters can also be configured this way
  x.time = 5
  x.warmup = 2

  # Typical mode, runs the block as many times as it can
  x.report("addition") { 1 + 2 }

  # To reduce overhead, the number of iterations is passed in
  # and the block must run the code the specific number of times.
  # Used for when the workload is very small and any overhead
  # introduces incorrectable errors.
  x.report("addition2") do |times|
    i = 0
    while i < times
      1 + 2
      i += 1
    end
  end

  # To reduce overhead even more, grafts the code given into
  # the loop that performs the iterations internally to reduce
  # overhead. Typically not needed, use the |times| form instead.
  x.report("addition3", "1 + 2")

  # Really long labels should be formatted correctly
  x.report("addition-test-long-label") { 1 + 2 }

  # Compare the iterations per second of the various reports!
  x.compare!
end

# 9/26/15
# 
# ./benchmark_ips 
# Calculating -------------------------------------
#             addition   173.824k i/100ms
#            addition2   175.891k i/100ms
#            addition3   206.506k i/100ms
# addition-test-long-label
#                        173.389k i/100ms
# -------------------------------------------------
#             addition     11.228M (± 3.6%) i/s -     56.145M
#            addition2     40.210M (± 5.9%) i/s -    200.164M
#            addition3     40.122M (± 6.4%) i/s -    199.485M
# addition-test-long-label
#                          11.134M (± 5.6%) i/s -     55.484M

# Comparison:
#            addition2: 40209912.5 i/s
#            addition3: 40121767.5 i/s - 1.00x slower
#             addition: 11227783.7 i/s - 3.58x slower
# addition-test-long-label: 11134419.5 i/s - 3.61x slower
